import React from 'react'
import { View, Text, ActivityIndicator, StyleSheet } from 'react-native'
import firebase from 'react-native-firebase'
import LocalStateHandler from "../res/LocalStateHandler";
import ConnectyCubeHandler from "../res/ConnectyCubeHandler";
import {NotificationsAndroid, PendingNotifications} from 'react-native-notifications';
import SingleChatHandler from "../res/SingleChatHandler";

// On Android, we allow for only one (global) listener per each event type.
NotificationsAndroid.setNotificationOpenedListener((notification) => {
    console.log("Notification opened by device user", notification);
});

/*firebase.messaging().onMessage((notification: RemoteMessage) => {
    // Process your message as required
    console.log("Notification opened by device user", notification);
    //alert(JSON.stringify(notification))
    NotificationsAndroid.localNotification({
        title: "Local notification",
        body: "This notification was generated by the app!",
        extra: "data"
    });
})*/

export default class Loading extends React.Component {
    //authFlag used because onAuthStateChanged can be called multiple times and the job must be done once
    authFlag = false;

    componentDidMount() {
        firebase.auth().onAuthStateChanged(user => {
            if(!this.authFlag) {
                this.authFlag = true

                if (user) {
                    ConnectyCubeHandler.setInstance(user.uid).then(() => {

                        const CCUserId = ConnectyCubeHandler.getCCUserId()
                        SingleChatHandler.connectToChat(CCUserId, 'LocalBuddy')

                        //current user must have his info in local
                        return LocalStateHandler.handleLocalState(user.uid)
                    }).then(() => this.props.navigation.navigate('Home'))
                } else {
                    this.props.navigation.navigate('Login')
                }
            }
        })
    }

    render() {
        return (
            <View style={styles.container}>
                <Text>Loading</Text>
                <ActivityIndicator size="large" />
            </View>
        )
    }
}
const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
    }
})